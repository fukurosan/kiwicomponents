@import "../../Stylesheets/variables.scss";
@import "../../Stylesheets/Internal/typography.scss";
@import "../../Stylesheets/Internal/scrollbar.scss";

/* Backdrop, needs to be split into two elements to achieve both the color overlay and blur effect */

.backdrop {
	position: fixed;
	inset: 0;
	z-index: 1;
}

#backdrop-color {
	background-color: $white;
	opacity: 50%;
}

#backdrop-blur {
	backdrop-filter: blur(var(--kiwi-window-backdrop-blur, 4px));
}

/* Main Container, used to achieve the mode="scrolling" effect */
#window-container {
	z-index: 1;
}

/* Dialog, the actual window element */
#window {
	position: fixed;
	z-index: 1;
	display: flex;
	flex-direction: column;
	box-shadow: $shadow-large;
	border-radius: $border-radius-medium;
	animation-duration: 200ms;
	animation-timing-function: ease-in-out;
	transition: all 200ms;
	background-color: white;
}

@keyframes main-animation {
	from {
		transform: scale(0.8);
		opacity: 0;
	}

	to {
		transform: scale(1);
		opacity: 1;
	}
}

/* 
 * By setting the border radius like this we are allowing for separate background colors for the header, body and footer 
 * without having to set overflow hidden on the #window element.
 * Setting overflow hidden could cause issues in dropdowns, menus, tooltips or other position:fixed/absolute elements inside of the window.
 */
#header,
:host(:not([title]):not([icon]):not([usedraggable]):not([useminimizable]):not([usemaximizable]):not([useclosebutton])) #body {
	border-top-left-radius: $border-radius-medium;
	border-top-right-radius: $border-radius-medium;
}

#footer,
:host(:not([usefooter])) #body {
	border-bottom-left-radius: $border-radius-medium;
	border-bottom-right-radius: $border-radius-medium;
}

/* Header Body and Footer container sections */

#header {
	@extend %h6;
	display: flex;
	flex-direction: row;
	align-items: center;
	gap: 0.5em;
	cursor: move;
	user-select: none;
	border-bottom: 1px solid $neutral-color-300;
	min-height: 1.75em;
	padding: 0.75rem 1.875rem;

	#header-text {
		display: none;
		flex: auto;
		overflow: hidden;
		text-overflow: ellipsis;
		white-space: nowrap;
	}

	#header-buttons {
		display: flex;
		flex-direction: row;
		gap: 0.5em;
		flex: auto;
		justify-content: end;
	}

	.icon {
		display: block;
		min-height: 0.875em;
		min-width: 0.875em;
		height: 0.875em;
		width: 0.875em;

		&#header-icon[src=""] {
			visibility: hidden;
		}

		&:is(#minimize-icon, #maximize-icon, #close-icon) {
			cursor: pointer;
			box-sizing: border-box;
			padding: 0.5em;
			margin-right: -0.5em;
			&#maximize-icon {
				padding: 0.4375em;
			}
			border-radius: 50%;
			min-height: 1.75em;
			min-width: 1.75em;
			height: 1.75em;
			width: 1.75em;
			background-color: white;
			transition: all 200ms;
			svg {
				transition: all 200ms;
				stroke: $neutral-color-500;
				fill: $neutral-color-500;
				width: 100%;
				height: 100%;
				display: block;
			}
			&:hover {
				background-color: $neutral-color-200;
				svg {
					stroke: $neutral-color-900;
					fill: $neutral-color-900;
				}
			}
		}
	}
}

#body {
	height: auto;
	flex: auto;
	overflow: auto;
}

#footer {
	border-top: 1px solid $neutral-color-300;
	display: flex;
	flex-direction: row;
	align-items: center;
}

#body,
#footer {
	padding: 1.25rem 1.875rem;
}

#header,
#footer {
	transition: border-color 300ms;
}

slot {
	@extend %body-m;
}

/* Resizer elements */

.resizer {
	position: absolute;
	height: 100%;
	width: 100%;
}

.resizer.top,
.resizer.bottom {
	height: 20px;
	cursor: ns-resize;
}

.resizer.left,
.resizer.right {
	width: 20px;
	cursor: ew-resize;
}

.resizer.top {
	top: -15px;
}

.resizer.right {
	right: -15px;
}

.resizer.bottom {
	bottom: -15px;
}

.resizer.left {
	left: -15px;
}

.resizer.top.right,
.resizer.bottom.left {
	cursor: nesw-resize;
}

.resizer.bottom.right,
.resizer.top.left {
	cursor: nwse-resize;
}

/* Minimized and Maximized state */

.minimized {
	height: auto !important;

	#body,
	#footer {
		display: none;
	}

	#header-buttons {
		display: none !important;
	}

	#header {
		font-size: 0.875rem;
		user-select: none;
		cursor: pointer;
	}
}

#window.maximized:not(.minimized) {
	width: 100vw !important;
	height: 100vh !important;
	inset: 0 !important;
	border-radius: 0 !important;

	* {
		border-radius: 0;
	}
}

/* Handle case for stopping transitions during drag */

.drag {
	transition: none !important;
}

/* Apply boolean attributes from host to dialog components */
:host(:not([title]):not([icon]):not([usedraggable]):not([useminimizable]):not([usemaximizable]):not([useclosebutton])) #header {
	display: none;
}

:host(:not([usefooter])) #footer {
	display: none;
}

:host(:not([useminimizable])) #minimize-icon {
	display: none;
}

:host(:not([usemaximizable])) #maximize-icon {
	display: none;
}

:host(:not([useclosebutton])) #close-icon {
	display: none;
}

:host(:not([icon])) #header-icon {
	display: none;
}

:host(:not([usedraggable])) #header {
	cursor: default;
}

:host([modality="none"]) .backdrop,
:host(:not([modality])) .backdrop {
	display: none;
}

:host(:not([useresizable])) .resizer {
	display: none;
}

/* Variants, these basically define different levels of air (padding) and layouts in the dialogs to be used for different purposes */
:host([variant="info"]) {
	//This variant is meant for things like displaying big picture information to the user
	#window:not(.scrolled) {
		//In this scale the border will by default be invisible, giving the impression of a single unit
		//If the user scrolls the content the borders will appear
		#header,
		#footer {
			border-color: transparent;
		}
	}
	#header {
		@extend %h4;
		justify-content: center;
		padding-inline: 4rem;
		padding-bottom: 1.625rem;
		padding-top: 4rem;
		#header-buttons {
			position: absolute;
			right: 2.5rem;
			top: 1rem;
		}
		.icon {
			min-width: 1.25em;
			width: 1.25em;
			min-height: 1.25em;
			height: 1.25em;
		}
		#header-text,
		#header-icon {
			@extend %h3;
			flex: unset;
		}
	}
	#minimize-icon {
		display: none !important;
	}
	#body {
		padding-block: 0;
		padding-inline: 8rem;
	}
	#footer {
		padding-inline: 8rem;
		padding-top: 1.625rem;
		padding-bottom: 4.5rem;
	}
	&:host(:not([usefooter])) #body {
		padding-bottom: 4.5rem;
	}
	&:host(:not([title]):not([icon]):not([usedraggable]):not([useminimizable]):not([usemaximizable]):not([useclosebutton])) #body {
		padding-top: 5rem;
	}

	@media screen and (max-width: 768px) {
		#header-buttons {
			right: 1.25rem !important;
		}
	}
}

/* Modes */

//Interactive (Default)
:host([mode="interactive"]) {
}
:host([mode="auto"]),
:host([mode="scrollable"]) {
	//These features are specific to the interactive mode
	.resizer,
	#minimize-icon,
	#maximize-icon {
		display: none !important;
	}
	#header {
		cursor: default !important;
	}
}

//Centers and auto sizes the window to fit the viewport.
:host([mode="auto"]) {
	#window {
		inset: 0 !important;
		margin: auto !important;
		height: fit-content !important;
		width: fit-content !important;
		/* Note: a window can be "maximized" without being "resizable". */
		max-height: calc(100vh - 3rem) !important;
		max-width: min(var(--kiwi-window-max-width, 43rem), calc(100vw - 1rem)) !important;
		min-width: min(var(--kiwi-window-min-width, 0rem), calc(100vw - 1rem)) !important;
	}
	/* Necessary for Safari */
	#body {
		height: fit-content !important;
		width: auto !important;
	}
}
//Make the entire page scroll instead of the body of the window
:host([mode="scrollable"]) {
	#window-container {
		position: fixed;
		top: 0;
		left: 0;
		width: 100vw;
		height: 100%;
		overflow-y: auto;
		overflow-x: hidden;
		margin-bottom: 4rem !important;
	}
	#window {
		position: relative !important;
		top: 0 !important;
		left: 0 !important;
		right: 0 !important;
		margin-inline: auto !important;
		margin-top: 3rem !important;
		margin-bottom: 4rem !important;
		width: fit-content !important;
		height: auto !important;
		max-height: unset !important;
		max-width: min(var(--kiwi-window-max-width, 43rem), calc(100vw - 1rem)) !important;
		min-width: min(var(--kiwi-window-min-width, 0rem), calc(100vw - 1rem)) !important;
	}
	/* Necessary for Safari */
	#body {
		height: fit-content !important;
		width: fit-content !important;
	}
}

@media screen and (max-width: 768px) {
	:host([mode="scrollable"]),
	:host([mode="auto"]) {
		#header,
		#body,
		#footer {
			box-sizing: border-box;
			padding-inline: 1.5rem !important;
			width: 100% !important;
		}
	}

	:host([mode="scrollable"]) {
		#window {
			width: 100% !important;
		}
	}

	:host([mode="auto"]) {
		#window {
			width: 100% !important;
			max-width: unset !important;
			min-width: unset !important;
			margin-bottom: 0 !important;
			bottom: 0 !important;
		}
		#window,
		#body,
		#footer {
			border-bottom-left-radius: 0;
			border-bottom-right-radius: 0;
		}
		#footer {
			padding-bottom: 2.25rem !important;
		}
	}
	@keyframes main-animation {
		from {
			transform: translateY(6rem);
			opacity: 0;
		}

		to {
			transform: translateY(0);
			opacity: 1;
		}
	}
}

@import "../../Stylesheets/variables.scss";
@import "../../Stylesheets/Internal/typography.scss";
@import "../../Stylesheets/Internal/scrollbar.scss";

/* Backdrop */

.backdrop {
	position: fixed;
	inset: 0;
	z-index: 1;
}

#backdrop-color {
	background-color: $white;
	opacity: 50%;
}

#backdrop-blur {
	backdrop-filter: blur(var(--kiwi-window-backdrop-blur, 4px));
}

/* Main Dialog Container */

#window {
	display: none;
	position: fixed;
	z-index: 1;
	display: flex;
	flex-direction: column;
	box-shadow: $shadow-medium;
	border-radius: $border-radius-medium;
	animation-duration: 200ms;
	animation-timing-function: ease-in-out;
	transition: all 200ms;

	&.noanimation {
		transition: none !important;
	}
}

@keyframes main-animation {
	from {
		transform: scale(0.8);
		opacity: 0;
	}

	to {
		transform: scale(1);
		opacity: 1;
	}
}

/* 
 * By setting the border radius like this we are allowing for separate background colors for the header, body and footer 
 * without having to set overflow hidden on the #window element.
 * Setting overflow hidden could cause issues in dropdowns, menus, tooltips or other position:fixed elements inside of the window.
 */
#header,
:host(:not([title]):not([icon]):not([usedraggable]):not([useminimizable]):not([usemaximizable]):not([useclosebutton])) #body {
	border-top-left-radius: $border-radius-medium;
	border-top-right-radius: $border-radius-medium;
}

#footer,
:host(:not([usefooter])) #body {
	border-bottom-left-radius: $border-radius-medium;
	border-bottom-right-radius: $border-radius-medium;
}

/* Header Body and Footer container sections */

#header {
	font-weight: 600 !important;
	background: $white;
	display: flex;
	flex-direction: row;
	align-items: center;
	gap: 0.5em;
	cursor: move;
	user-select: none;
	border-bottom: 1px solid var(--kiwi-window-separator-color, transparent);

	#header-text {
		display: none;
		flex: auto;
		overflow: hidden;
		text-overflow: ellipsis;
		white-space: nowrap;
	}

	#header-buttons {
		display: flex;
		flex-direction: row;
		gap: 0.5em;
		flex: auto;
		justify-content: end;
	}

	.icon {
		display: block;
		min-height: 0.875em;
		min-width: 0.875em;
		height: 0.875em;
		width: 0.875em;
		position: relative;

		&#header-icon[src=""] {
			visibility: hidden;
		}

		&:is(#minimize-icon, #maximize-icon, #close-icon) {
			cursor: pointer;
			svg {
				transition: all 200ms;
				stroke: $neutral-color-500;
				fill: $neutral-color-500;
				width: 100%;
				height: 100%;
				display: block;
			}
			&:hover svg {
				stroke: $neutral-color-900;
				fill: $neutral-color-900;
			}
		}
	}
}

#body {
	height: 100%;
	overflow: auto;
	background: var(--kiwi-window-body-background, white);
}

#footer {
	background: var(--kiwi-window-footer-background, $neutral-color-100);
	border-top: 1px solid var(--kiwi-window-separator-color, $neutral-color-200);
	display: flex;
	flex-direction: row;
	align-items: center;
	white-space: nowrap;
	overflow: hidden;
}

#header,
#body,
#footer {
	@extend %h4;
	padding: 0.625em 1em;
}

#header,
#footer {
	min-height: 1.375em;
}

slot {
	@extend %body-m;
}

/* Resizer elements */

.resizer {
	position: absolute;
	height: 100%;
	width: 100%;
}

.resizer.top,
.resizer.bottom {
	height: 20px;
	cursor: ns-resize;
}

.resizer.left,
.resizer.right {
	width: 20px;
	cursor: ew-resize;
}

.resizer.top {
	top: -15px;
}

.resizer.right {
	right: -15px;
}

.resizer.bottom {
	bottom: -15px;
}

.resizer.left {
	left: -15px;
}

.resizer.top.right,
.resizer.bottom.left {
	cursor: nesw-resize;
}

.resizer.bottom.right,
.resizer.top.left {
	cursor: nwse-resize;
}

/* Minimized and Maximized state */

.minimized {
	height: auto !important;

	#body,
	#footer {
		display: none;
	}

	#header-buttons {
		display: none !important;
	}

	#header {
		user-select: none;
		cursor: pointer;
	}
}

#window.maximized:not(.minimized) {
	width: 100vw !important;
	height: 100vh !important;
	inset: 0 !important;
	border-radius: 0 !important;

	* {
		border-radius: 0 !important;
	}
}

/* Handle case for stopping transitions during drag */

.drag {
	transition: none !important;
}

/* Apply boolean attributes from host to dialog components */
:host(:not([title]):not([icon]):not([usedraggable]):not([useminimizable]):not([usemaximizable]):not([useclosebutton])) #header {
	display: none;
}

:host(:not([usefooter])) #footer {
	display: none;
}

:host(:not([useminimizable])) #minimize-icon {
	display: none;
}

:host(:not([usemaximizable])) #maximize-icon {
	display: none;
}

:host(:not([useclosebutton])) #close-icon {
	display: none;
}

:host(:not([icon])) #header-icon {
	display: none;
}

:host(:not([usedraggable])) #header {
	cursor: default;
}

:host([modality="none"]) .backdrop,
:host(:not([modality])) .backdrop {
	display: none;
}

:host([scale="none"]) {
	#header,
	#body,
	#footer {
		padding: 0;
	}

	#header,
	#footer {
		min-height: 0;
	}
}

:host([scale="compact"]) {
	#header,
	#body,
	#footer {
		@extend %subtitle-2;
	}
}

:host([scale="small"]) {
	#header,
	#body,
	#footer {
		@extend %h6;
	}
}

:host([scale="large"]) {
	#header,
	#body,
	#footer {
		@extend %h3;
	}

	#header,
	#footer {
		min-height: 2.375rem;
	}

	#header {
		.icon {
			min-height: 1.5rem;
			min-width: 1.5rem;
			height: 1.5rem;
			width: 1.5rem;
		}
	}
}

:host([noanimation]) {
	* {
		transition-duration: 0ms !important;
	}
}

:host([usecentered]) #window {
	inset: 0 !important;
	margin: auto !important;
	height: fit-content !important;
	width: fit-content !important;
	/* Note: a window can be "maximized" without being "resizable". */
	max-height: calc(100vh - 3rem) !important;
	max-width: calc(100vw - 3rem) !important;
}

/* Necessary for Safari */
:host([usecentered]) #body {
	height: fit-content !important;
	width: fit-content !important;
}

:host(:not([useresizable])) .resizer {
	display: none;
}

/* Some experimental fun */
:host([usecentered="scroll"]) #window {
	position: absolute !important;
	margin-top: 3rem !important;
	max-height: unset !important;
}
/*
:host([usecentered="scroll"]:not([usefooter])) #body {
	margin-bottom: 3rem !important;
}
:host([usecentered="scroll"]) #footer {
	margin-bottom: 3rem !important;
}
*/

:host([usecentered="scroll"]) #window-container {
	position: fixed;
	top: 0;
	left: 0;
	width: 100vw;
	height: 100%;
	overflow-y: auto;
	overflow-x: hidden;
	#footer {
		margin-bottom: 4rem;
	}
}

:host([usecentered="scroll"]:not([usefooter])) #body {
	margin-bottom: 4rem;
}

@import "../variables.scss";
@import "../Components/typography.scss";

/* General styles */

input {
	accent-color: $primary-color-600;
}

input:not([type]),
input[type="text"],
input[type="password"],
input[type="textarea"],
input[type="date"],
input[type="datetime-local"],
input[type="email"],
input[type="month"],
input[type="number"],
input[type="search"],
input[type="tel"],
input[type="text"],
input[type="time"],
input[type="url"],
input[type="week"],
textarea,
select {
	display: block;
	width: 100%;
	padding: 0.5rem 1rem;
	font-family: $font-family-body;
	font-size: 1rem;
	line-height: 1.75;
	color: $black;
	background: $white;
	border: 1px solid $neutral-color-300;
	border-radius: 0.375rem;
	&:focus,
	&:focus-visible {
		border: 1px solid $primary-color-600;
		box-shadow: 0 0 0 0.1875rem $primary-color-100;
		outline: 0;
	}
}

input:not([type]),
input[type="text"],
input[type="password"],
input[type="date"],
input[type="datetime-local"],
input[type="email"],
input[type="month"],
input[type="number"],
input[type="search"],
input[type="tel"],
input[type="text"],
input[type="time"],
input[type="url"],
input[type="week"],
select {
	box-sizing: border-box;
	height: 2.875rem;
}

input[type="checkbox"],
input[type="radio"] {
	margin: 0;
	&:focus,
	&:focus-visible {
		outline: 0.1875rem solid $primary-color-100;
	}
}

/* Disabled styles */

input:not([type="range"]):disabled,
textarea:disabled,
select:disabled {
	cursor: not-allowed;
	background-color: $neutral-color-100;
}

/* Invalid styles */

input:invalid,
textarea:invalid,
select:invalid {
	border: 1px solid $error-color-600 !important;
	&:focus,
	&:focus-visible {
		box-shadow: 0 0 0 0.1875rem $error-color-100;
		outline: 0;
	}
}

/* Select styles */

select:not([multiple], [size]) {
	appearance: none;
	padding-right: 2.5rem;
	background-image: url('data:image/svg+xml;utf-8,<svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"><polyline points="6 9 12 15 18 9"/></svg>');
	background-position: center right 0.75rem;
	background-size: 1.25rem;
	background-repeat: no-repeat;
}

select[multiple] {
	padding: 0;
	height: auto;
	width: 100%;
	option {
		padding: 0.5rem 1rem;
	}
	option:checked {
		//The text color in Chromium will be white on focus, and this cannot be changed
		background: $primary-color-100 linear-gradient(0deg, $primary-color-100 0%, $primary-color-100 100%);
	}
	@-moz-document url-prefix() {
		&:focus option:checked {
			//The text color in Firefox will be white on focus, and this cannot be changed
			background: $primary-color-600 linear-gradient(0deg, $primary-color-600 0%, $primary-color-600 100%);
		}
	}
	@media not all and (min-resolution: 0.001dpcm) {
		@supports (-webkit-touch-callout: none) {
			//For mobile safari this element needs a set height + padding
			height: 2.875rem;
			padding: 0.5rem 1rem;
		}
	}
}

/* Placeholder styles */

::placeholder {
	color: $neutral-color-400;
	opacity: 1;
}

/* Checkboxes, radio buttons and switches */

@supports (-webkit-appearance: none) or (-moz-appearance: none) {
	input[type="checkbox"],
	input[type="radio"] {
		-webkit-appearance: none;
		-moz-appearance: none;
		appearance: none;
		width: 1.625rem;
		height: 1.625rem;
		border: 0.125rem solid $neutral-color-400;
		transition: background-color 200ms, border-color 200ms;
		cursor: pointer;
		&:disabled {
			cursor: not-allowed;
			opacity: 0.7;
		}
	}

	// Checkboxes
	input[type="checkbox"]:not([role="switch"]) {
		background-color: $white;
		border-color: $neutral-color-400;
		border-radius: $border-radius-small;
		&:checked,
		&:checked:active,
		&:checked:focus {
			background-color: $primary-color-600;
			border-color: $primary-color-600;
			background-image: url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' width='24' height='24' viewBox='0 0 24 24' fill='none' stroke='rgb(255, 255, 255)' stroke-width='4' stroke-linecap='round' stroke-linejoin='round'%3E%3Cpolyline points='20 6 9 17 4 12'%3E%3C/polyline%3E%3C/svg%3E");
			background-position: center;
			background-size: 1em auto;
			background-repeat: no-repeat;
		}
	}

	// Radio buttons
	input[type="radio"] {
		border-radius: 50%;
		background-color: $white;
		&:checked,
		&:checked:active,
		&:checked:focus {
			border-width: 0.4375rem;
			border-color: $primary-color-600;
			background-color: $white;
		}
	}

	// Switches
	input[type="checkbox"][role="switch"] {
		$switch-height: 1.625rem;
		$switch-width: 2.75rem;
		$switch-border-width: 0.25rem;
		width: $switch-width;
		height: $switch-height;
		border: $switch-border-width solid $neutral-color-400;
		border-radius: $switch-height;
		background-color: $neutral-color-400;
		line-height: $switch-height;
		&:checked {
			background-color: $primary-color-600;
			border-color: $primary-color-600;
		}
		&:before {
			display: block;
			width: calc(#{$switch-height} - (#{$switch-border-width} * 2));
			height: 100%;
			border-radius: 50%;
			background-color: white;
			content: "";
			transition: margin 200ms ease-in-out;
		}
		&:checked::before {
			background-size: 0.875rem auto;
			margin-left: calc(#{$switch-width * 0.5} - #{$switch-border-width});
			margin-inline-start: calc(#{$switch-width * 0.5} - #{$switch-border-width});
		}
	}
}

/* Ranges */
[type="range"] {
	$height-track: 0.375rem;
	$height-thumb: 2rem;
	$border-thumb: 0.25rem;
	--range-thumb-border-color: #{$white};
	--range-thumb-color: #{$primary-color-600};
	--range-thumb-hover-color: transparent;
	--range-thumb-active-color: transparent;
	-webkit-appearance: none;
	-moz-appearance: none;
	appearance: none;
	width: 100%;
	height: $height-thumb;
	background: none;

	//Slider Track
	@mixin slider-track {
		width: 100%;
		height: $height-track;
		border-radius: 0.1875rem;
		background-color: $neutral-color-300;
		transition: background-color 200ms;
	}

	&::-webkit-slider-runnable-track {
		@include slider-track;
	}

	&::-moz-range-track {
		@include slider-track;
	}

	&::-ms-track {
		@include slider-track;
	}

	//Slider Thumb
	@mixin slider-thumb {
		-webkit-appearance: none;
		width: $height-thumb;
		height: $height-thumb;
		box-sizing: border-box;
		margin-top: #{(-($height-thumb * 0.5) + ($height-track * 0.5))};
		border: $border-thumb solid var(--range-thumb-border-color);
		border-radius: 50%;
		background: var(--range-thumb-color);
		cursor: grab;
		transition: background-color 200ms, transform 200ms;
	}
	&::-webkit-slider-thumb {
		@include slider-thumb;
	}

	&::-moz-range-thumb {
		@include slider-thumb;
	}

	&::-ms-thumb {
		@include slider-thumb;
	}

	//States
	&:hover,
	&:focus {
		--range-thumb-color: #{$primary-color-500};
	}

	&:disabled {
		cursor: not-allowed;
		&::-webkit-slider-thumb {
			background-color: $neutral-color-300;
			cursor: not-allowed;
		}
		&::-moz-range-thumb {
			background-color: $neutral-color-300;
			cursor: not-allowed;
		}
		&::-ms-thumb {
			background-color: $neutral-color-300;
			cursor: not-allowed;
		}
	}

	&:active:not(:disabled) {
		&::-webkit-slider-thumb {
			transform: scale(1.25);
			cursor: grabbing;
		}

		&::-moz-range-thumb {
			transform: scale(1.25);
			cursor: grabbing;
		}

		&::-ms-thumb {
			transform: scale(1.25);
			cursor: grabbing;
		}
	}
}

/* Labels and fieldsets */

form label {
	@extend %subtitle-2;
}

form label > * {
	margin-top: calc(var(--kiwi-flex-gap, 1rem) * 0.5);
}

form label[for] {
	margin-bottom: calc(var(--kiwi-flex-gap, 1rem) * 0.5);
}

form label:not([for]) {
	width: 100%;
}

form fieldset:not([class="label"]) {
	margin: 0;
	padding: 1rem;
	border: 1px solid $neutral-color-300;
	border-radius: $border-radius-small;
	legend {
		@extend %subtitle-2;
		padding: 0 calc(var(--kiwi-flex-gap, 1rem) * 0.5);
		margin: 0;
	}
}

form fieldset[class="label"] {
	margin: 0;
	padding: 0;
	border: 0;
	padding-top: calc(var(--kiwi-flex-gap, 1rem) * 0.5);
	legend {
		@extend %subtitle-2;
		padding: 0;
		margin: 0;
	}
}

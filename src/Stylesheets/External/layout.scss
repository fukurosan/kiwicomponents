@import "../Internal/typography.scss";
@import "../Internal/typography.scss";
@import "../Tokens/shadows.scss";

// Layout class

.layout {
	--kiwi-layout-narrow-max-width: 37rem; //592px
	--kiwi-layout-content-max-width: 56rem; //896px
	--kiwi-layout-breakout-max-width: 75rem; //1200px
	--kiwi-layout-margin-inline: 1rem;
	--kiwi-layout-gap-space: 0rem;

	--narrow: min(var(--kiwi-layout-narrow-max-width), 100% - var(--kiwi-layout-margin-inline) * 2);
	--content: clamp(0rem, calc((var(--kiwi-layout-content-max-width) - var(--kiwi-layout-narrow-max-width)) / 2), calc((100% - var(--kiwi-layout-narrow-max-width)) / 2 - var(--kiwi-layout-margin-inline)));
	--breakout: minmax(0, calc((var(--kiwi-layout-breakout-max-width) - var(--kiwi-layout-content-max-width)) / 2));
	--full: minmax(var(--kiwi-layout-margin-inline), 1fr);

	display: grid;
	row-gap: var(--kiwi-layout-gap-space);
	grid-template-columns:
		[full-start] var(--full)
		[breakout-start] var(--breakout)
		[content-start] var(--content)
		[narrow-start] var(--narrow) [narrow-end]
		var(--content) [content-end]
		var(--breakout) [breakout-end]
		var(--full) [full-end];
}

.layout > .full-width {
	grid-column: full;
}

.layout > .breakout {
	grid-column: breakout;
}

.layout > * {
	grid-column: content;
}

.layout > .narrow {
	grid-column: narrow;
}

@media (max-width: 768px) {
	.layout {
		--kiwi-layout-narrow-max-width: 100%;
		--kiwi-layout-content-max-width: 100%;
		--kiwi-layout-breakout-max-width: 100%;
	}
	.layout.no-mobile-spacing {
		--kiwi-layout-margin-inline: 0rem;
		--kiwi-layout-gap-space: 0rem;
	}
}

//Article classes

article {
	--kiwi-article-content-max-width: 100%; //For example 40rem (~640px) of available space for content, the rest is filled with responsive padding
	--kiwi-article-min-padding-inline: 3rem;
	--kiwi-article-min-padding-block: 3rem;
	display: flex;
	flex-direction: column;
	gap: calc(var(--kiwi-article-min-padding-block) / 2);
	padding: var(--kiwi-article-min-padding-block) max(var(--kiwi-article-min-padding-inline), calc(calc(100% - var(--kiwi-article-content-max-width)) / 2));
	box-shadow: $small-shadow;
	background: #ffffff;
	border-radius: $border-radius-large;
	&.narrow {
		--kiwi-article-min-padding-block: 3rem;
		--kiwi-article-min-padding-inline: 1.5rem;
	}
	&.limited-content-width {
		--kiwi-article-content-max-width: 40rem;
	}
	> article {
		--kiwi-article-min-padding-block: 1.5rem;
		--kiwi-article-min-padding-inline: 1.5rem;
		gap: var(--kiwi-article-min-padding-block);
		background: $neutral-color-50;
		box-shadow: none;
	}
}

.article-list {
	display: flex;
	flex-direction: column;
	padding-inline: var(--kiwi-article-list-padding-inline, 1rem);
	padding-block: var(--kiwi-article-list-padding-block, 1rem);
	gap: var(--kiwi-article-list-gap, 1rem);
}

.layout > .article-list {
	--kiwi-article-list-padding-inline: 0rem;
	--kiwi-article-list-padding-block: 0rem;
}

@media (max-width: 768px) {
	article {
		--kiwi-article-min-padding-inline: 1.5rem;
	}
	.article-list.no-mobile-spacing {
		--kiwi-article-list-padding-inline: 0rem;
		--kiwi-article-list-padding-block: 0rem;
		--kiwi-article-list-gap: 0rem;
		> article {
			box-shadow: none;
			border: none;
			border-radius: 0;
		}
	}
}

//Containers

.container {
	margin-inline: 2rem;
}

.grid {
	display: grid;
	grid-template-columns: repeat(auto-fit, minmax(var(--kiwi-grid-column-min-measurement, 0%), 1fr));
	grid-column-gap: var(--kiwi-grid-gap, 0.5rem);
	grid-row-gap: var(--kiwi-grid-gap, 0.5rem);
}

.flex-right {
	display: flex;
	flex-direction: row;
	gap: var(--kiwi-flex-gap, 1rem);
}

.flex-down {
	display: flex;
	flex-direction: column;
	gap: var(--kiwi-flex-gap, 1rem);
}

@media (max-width: 768px) {
	.desktop-only {
		display: none !important;
	}
}

@media (min-width: 768px) {
	.mobile-only {
		display: none !important;
	}
}

.center-content,
.center-content-flex,
.center-content-absolute,
.center-content-fixed {
	justify-content: center;
	align-items: center;
	text-align: center;
	margin: auto;
}
.center-content-flex {
	display: flex;
}
.center-content-absolute,
.center-content-fixed {
	inset: 0;
}
.center-content-absolute {
	position: absolute;
}
.center-content-fixed {
	position: fixed;
}

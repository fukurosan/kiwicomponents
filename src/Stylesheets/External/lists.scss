@import "../variables.scss";

// General
ol.steps,
ul.steps,
ul.menu,
.menu > li,
.steps > li {
	margin: 0;
	padding: 0;
	list-style: none;
}

ul.steps,
ol.steps {
	counter-reset: ordered-item;
	display: inline-grid;
	grid-auto-rows: 1fr;
	grid-auto-columns: 1fr;
	grid-auto-flow: row;
	li {
		display: grid;
		gap: 1rem;
		grid-template-columns: 2rem 1fr;
		min-height: 4rem;
		min-width: 4rem;
		align-items: center;
		justify-items: start;
		text-align: left;
		&::before {
			// Circle
			content: "";
			z-index: 1;
			grid-column-start: 1;
			grid-row-start: 1;
			display: grid;
			place-items: center;
			place-self: center;
			height: 2rem;
			width: 2rem;
			border-radius: 50%;
			background-color: $primary-color-600;
			color: $with-color-above-400;
		}
		&:not(:first-child)::after {
			// Line between circles
			content: "";
			grid-column-start: 1;
			grid-row-start: 1;
			height: 100%;
			width: 0.375rem;
			margin-inline: 50%;
			transform: translate(-50%, -50%);
			background-color: $primary-color-600;
			color: $with-color-above-400;
		}
	}

	// Horizontal version
	&.horizontal {
		grid-auto-flow: column;
		gap: 0.5rem;
		li {
			grid-template-rows: 2rem 1fr;
			grid-template-columns: auto;
			place-items: center;
			text-align: center;
			&:not(:first-child)::after {
				height: 0.5rem;
				width: 100%;
				transform: translate(0, 0);
				margin-inline-start: -50%;
			}
		}
	}

	// Colours and types
	li {
		&.is-secondary:before,
		&.is-secondary:after {
			background-color: $secondary-color-600;
			color: $with-color-above-400;
		}

		&.is-neutral:before,
		&.is-neutral:after {
			background-color: $neutral-color-300;
			color: $with-color-below-500;
		}

		&.is-success:before,
		&.is-success:after {
			content: "✓";
			font-weight: 700;
			background-color: $success-color-500;
			color: $with-color-above-400;
		}

		&.is-info:before,
		&.is-info:after {
			content: "？";
			font-weight: 700;
			background-color: $info-color-600;
			color: $with-color-above-400;
		}

		&.is-warning:before,
		&.is-warning:after {
			content: "！";
			font-weight: 700;
			background-color: $warning-color-500;
			color: $with-color-above-400;
		}

		&.is-error:before,
		&.is-error:after {
			content: "✕";
			font-weight: 700;
			background-color: $error-color-600;
			color: $with-color-above-400;
		}

		&[kiwi-content]:before {
			content: attr(kiwi-content);
		}
	}
}

// Unordered list
ul.steps {
	li {
		min-width: 2.5rem;
		min-height: 2.5rem;
		&::before {
			width: 1.25rem;
			height: 1.25rem;
		}
		&:not(:first-child)::after {
			width: 0.25rem;
		}
	}
	&.horizontal li:not(:first-child)::after {
		height: 0.25rem;
	}
}

// Ordered List
ol.steps {
	counter-reset: ordered-item;
	li {
		&::before {
			content: counter(ordered-item);
			counter-increment: ordered-item;
		}
	}
}

// Menus
ul.menu {
	all: unset;
	li,
	li::before,
	li::after {
		all: unset;
	}
	display: inline-grid;
	grid-auto-flow: row;
	grid-auto-rows: max-content;
	cursor: pointer;
	border: 1px solid $neutral-color-300;
	box-sizing: border-box;
	width: 100%;
	border-radius: $border-radius-medium;
	background-color: $white;
	padding: 0.5rem;

	li {
		user-select: none;
		display: flex;
		align-items: center;
		box-sizing: border-box;
		height: 2.5em;
		padding: 0.375em 1em;
		border-radius: $border-radius-medium;
		list-style: none;
		transition: background-color 200ms;
		&:hover {
			background-color: $neutral-color-100;
		}
		&:active {
			background-color: $primary-color-50;
		}
	}

	&.horizontal {
		grid-auto-flow: column;
		grid-auto-columns: auto;
		li {
			text-align: center;
			justify-content: center;
		}
	}
}
